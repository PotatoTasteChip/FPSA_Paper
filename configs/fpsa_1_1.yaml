# ========================================================================================#
# fpsa_1_1,yaml 모델 구조 요약
# ========================================================================================#
# 1. 입력 RGB 이미지를 두 갈래로 분기:
#     (1) RGB → 일반 YOLOv11 백본 (P3, P4, P5 생성)
#     (2) RGB → Gray → FFT → Phase-only 역변환 → 별도 백본 (P3', P4', P5' 생성)
#
#  2. 두 branch에서 나온 feature maps를 단계별로 병합(#24~#26): 
#     - P3  = RGB_P3 + Phase_P3 (Concat)
#     - P4  = RGB_P4 + Phase_P4 (Concat)
#     - P5  = RGB_P5 + Phase_P5 (Concat)
#
#  3. 기존 YOLOv11 헤드 구조를 통한 업샘플링/병합 → 최종 Detect 수행
#
# - 모듈:
#     - PhaseIFFT_1: FFT 후 phase만 남기고(amplitude =1) IFFT (1채널)
# ========================================================================================#

# Parameters
nc: 80 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolo11n.yaml' will call yolo11.yaml with scale 'n'
  # [depth, width, max_channels]
  #n: [0.50, 0.25, 1024] # summary: 181 layers, 2624080 parameters, 2624064 gradients, 6.6 GFLOPs
  #s: [0.50, 0.50, 1024] # summary: 181 layers, 9458752 parameters, 9458736 gradients, 21.7 GFLOPs
  m: [0.50, 1.00, 512] # summary: 231 layers, 20114688 parameters, 20114672 gradients, 68.5 GFLOPs
  #l: [1.00, 1.00, 512] # summary: 357 layers, 25372160 parameters, 25372144 gradients, 87.6 GFLOPs
  #x: [1.00, 1.50, 512] # summary: 357 layers, 56966176 parameters, 56966160 gradients, 196.0 GFLOPs

backbone:
  # 0) RGB 그대로 pass → Identity (3ch)
  - [-1, 1, nn.Identity, []]                   # 0

  ## Phase only ##
  - [0, 1, PhaseIFFT_1, [1, False]]           # 1 (gray 1ch)

  ## RGB YOLO11 backbone ##
  - [0, 1, Conv, [64, 3, 2]]                   # 2   
  - [-1, 1, Conv, [128, 3, 2]]                 # 3
  - [-1, 2, C3k2, [256, False, 0.25]]          # 4

  - [-1, 1, Conv, [256, 3, 2]]                 # 5
  - [-1, 2, C3k2, [512, False, 0.25]]          # 6

  - [-1, 1, Conv, [512, 3, 2]]                 # 7
  - [-1, 2, C3k2, [512, True]]                 # 8

  - [-1, 1, Conv, [1024, 3, 2]]                # 9
  - [-1, 2, C3k2, [1024, True]]                # 10
  - [-1, 1, SPPF, [1024, 5]]                   # 11
  - [-1, 2, C2PSA, [1024]]                     # 12

  ## FFT backbone ##
  - [1, 1, Conv, [64, 3, 2]]                   # 13
  - [-1, 1, Conv, [128, 3, 2]]                 # 14
  - [-1, 2, C3k2, [256, False, 0.25]]          # 15

  - [-1, 1, Conv, [256, 3, 2]]                 # 16
  - [-1, 2, C3k2, [512, False, 0.25]]          # 17

  - [-1, 1, Conv, [512, 3, 2]]                 # 18
  - [-1, 2, C3k2, [512, True]]                 # 19

  - [-1, 1, Conv, [1024, 3, 2]]                # 20
  - [-1, 2, C3k2, [1024, True]]                # 21
  - [-1, 1, SPPF, [1024, 5]]                   # 22
  - [-1, 2, C2PSA, [1024]]                     # 23

  ## fused P3(add)
  - [[6,17], 1, Concat, [1]]                        # 24
  ## fused P4(add)
  - [[8, 19],1, Concat, [1]]                        # 25
  ## fused P5(add)
  - [[12, 23],1, Concat, [1]]                      # 26

head:
  - [26, 1, nn.Upsample, [None, 2, "nearest"]]    # 27: upsample fused P5
  - [[-1, 25], 1, Concat, [1]]                    # 28
  - [-1, 2, C3k2, [512, False]]                   # 29

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]    # 30
  - [[-1, 24], 1, Concat, [1]]                    # 31
  - [-1, 2, C3k2, [256, False]]                   # 32 (final P3/8-small)

  - [-1, 1, Conv, [256, 3, 2]]                    # 33
  - [[-1, 29], 1, Concat, [1]]                    # 34
  - [-1, 2, C3k2, [512, False]]                   # 35 (final P4/16-medium)

  - [-1, 1, Conv, [512, 3, 2]]                    # 36
  - [[-1, 26], 1, Concat, [1]]                    # 37
  - [-1, 2, C3k2, [1024, True]]                   # 38 (final P5/32-large)

  - [[32, 35, 38], 1, Detect, [nc]]              # 39
