# ========================================================================================#
# fpsa_1_1,yaml 모델 구조 요약
# ========================================================================================#
# 1. 입력 RGB 이미지를 두 갈래로 분기:
#     (1) RGB → 일반 YOLOv11 백본 (P3, P4, P5 생성)
#     (2) RGB → Gray → FFT → Phase-only 역변환 → 640x640x1 -> down sample -> 20x20x1 -> 1x1 conv -> 20x20x1024-> sigmoid
#
# --> phase only
# --> modulate -> gateadd
#    
#     
#
# 
#
# ========================================================================================#

# Parameters
nc: 80 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolo11n.yaml' will call yolo11.yaml with scale 'n'
  # [depth, width, max_channels]
  #n: [0.50, 0.25, 1024] # summary: 181 layers, 2624080 parameters, 2624064 gradients, 6.6 GFLOPs
  #s: [0.50, 0.50, 1024] # summary: 181 layers, 9458752 parameters, 9458736 gradients, 21.7 GFLOPs
  m: [0.50, 1.00, 512] # summary: 231 layers, 20114688 parameters, 20114672 gradients, 68.5 GFLOPs
  #l: [1.00, 1.00, 512] # summary: 357 layers, 25372160 parameters, 25372144 gradients, 87.6 GFLOPs
  #x: [1.00, 1.50, 512] # summary: 357 layers, 56966176 parameters, 56966160 gradients, 196.0 GFLOPs

backbone:
  # 0) RGB 그대로 pass → Identity (3ch)
  - [-1, 1, nn.Identity, []]                   # 0

  ## Phase only ##
  - [0, 1, PhaseIFFT_1, [1, False]]            # 1 (gray 1ch)

  ## RGB YOLO11 backbone ##
  - [0, 1, Conv, [64, 3, 2]]                   # 2   
  - [-1, 1, Conv, [128, 3, 2]]                 # 3
  - [-1, 2, C3k2, [256, False, 0.25]]          # 4

  - [-1, 1, Conv, [256, 3, 2]]                 # 5
  - [-1, 2, C3k2, [512, False, 0.25]]          # 6 p3

  - [-1, 1, Conv, [512, 3, 2]]                 # 7
  - [-1, 2, C3k2, [512, True]]                 # 8 p4

  - [-1, 1, Conv, [1024, 3, 2]]                # 9
  - [-1, 2, C3k2, [1024, True]]                # 10 p5
  - [-1, 1, SPPF, [1024, 5]]                   # 11

  ## phase attention mask ##
  - [1, 1, nn.AvgPool2d, [32, 32]]            # 12: 평균값 기반 다운샘플링-> 32커널 32stride avg pooling -> 640x640x1 -> 20x20x1
  - [-1, 1, Conv, [1024, 1, 1]]                # 13: out_channels=1024, kernel_size=1, stride=1 -> 20x20x1024
  - [-1, 1, nn.Sigmoid, []]                    # 14: sigmoid -> phase attention mask


  - [[11,14], 1, GatedAdd, [0]]                # 15: phase attn mask modulated

  - [-1, 2, C2PSA, [1024]]                     # 16

head:
  - [16, 1, nn.Upsample, [None, 2, "nearest"]]    # 17
  - [[-1, 8], 1, Concat, [1]]                     # 17 
  - [-1, 2, C3k2, [512, False]]                   # 19

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]    # 20
  - [[-1, 6], 1, Concat, [1]]                     # 21
  - [-1, 2, C3k2, [256, False]]                   # 22 (final P3/8-small)

  - [-1, 1, Conv, [256, 3, 2]]                    # 23
  - [[-1, 19], 1, Concat, [1]]                    # 24
  - [-1, 2, C3k2, [512, False]]                   # 25 (final P4/16-medium)

  - [-1, 1, Conv, [512, 3, 2]]                    # 26
  - [[-1, 16], 1, Concat, [1]]                    # 27
  - [-1, 2, C3k2, [1024, True]]                   # 28 (final P5/32-large)

  - [[22, 25, 28], 1, Detect, [nc]]              # 30
